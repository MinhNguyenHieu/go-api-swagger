basePath: /api/v1
definitions:
  handler.LoginResponse:
    properties:
      role:
        type: string
      token:
        type: string
    type: object
  model.Item:
    properties:
      createdAt:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      updatedAt:
        type: string
    type: object
  model.NullString:
    properties:
      string:
        type: string
      valid:
        type: boolean
    type: object
  model.NullTime:
    properties:
      time:
        type: string
      valid:
        type: boolean
    type: object
  model.User:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/model.NullTime'
      email:
        type: string
      emailVerifiedAt:
        $ref: '#/definitions/model.NullTime'
      id:
        type: integer
      rememberTokenUuid:
        $ref: '#/definitions/model.NullString'
      roleId:
        type: integer
      updatedAt:
        type: string
      username:
        type: string
    type: object
  request.CreateItemRequest:
    properties:
      description:
        maxLength: 1000
        type: string
      name:
        maxLength: 255
        minLength: 3
        type: string
    required:
    - name
    type: object
  request.LoginUserRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  request.RegisterUserRequest:
    properties:
      email:
        type: string
      password:
        maxLength: 255
        minLength: 6
        type: string
      username:
        maxLength: 255
        minLength: 3
        type: string
    required:
    - email
    - password
    - username
    type: object
  request.UpdateItemRequest:
    properties:
      description:
        maxLength: 1000
        type: string
      name:
        maxLength: 255
        minLength: 3
        type: string
    required:
    - name
    type: object
  request.UpdateUserRoleRequest:
    properties:
      role:
        enum:
        - admin
        - user
        - author
        type: string
    required:
    - role
    type: object
  service.PaginatedItems:
    properties:
      items:
        items:
          $ref: '#/definitions/model.Item'
        type: array
      page:
        type: integer
      pageSize:
        type: integer
      totalCount:
        type: integer
      totalPages:
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample Go API application with JWT Authentication, SQLC,
    and PostgreSQL.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Go API Application
  version: "1.0"
paths:
  /admin/items:
    post:
      consumes:
      - application/json
      description: Creates a new item with a name and description. Requires JWT authentication
        and 'admin' role.
      parameters:
      - description: Item creation details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.CreateItemRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created item
          schema:
            $ref: '#/definitions/model.Item'
        "400":
          description: 'message: Invalid request data'
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 'message: Authentication token required / Invalid token'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'message: You do not have permission to access this resource.'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'message: Internal server error'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create a new item
      tags:
      - items
  /admin/items/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes an item by its ID. Requires JWT authentication and 'admin'
        role.
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: 'message: Invalid item ID format'
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 'message: Authentication token required / Invalid token'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'message: You do not have permission to access this resource.'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'message: Item not found'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'message: Internal server error'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete an item
      tags:
      - items
    put:
      consumes:
      - application/json
      description: Updates an existing item's name and description. Requires JWT authentication
        and 'admin' role.
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: integer
      - description: Item update details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.UpdateItemRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Updated item
          schema:
            $ref: '#/definitions/model.Item'
        "400":
          description: 'message: Invalid request data / Invalid item ID format'
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 'message: Authentication token required / Invalid token'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'message: You do not have permission to access this resource.'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'message: Item not found'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'message: Internal server error'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update an existing item
      tags:
      - items
  /admin/users/{id}/role:
    put:
      consumes:
      - application/json
      description: Updates the role of a specific user. Requires JWT authentication
        and 'admin' role.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: New role for the user
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.UpdateUserRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Updated user details
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: 'message: Invalid request data / Invalid User ID format'
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 'message: Authentication token required / Invalid token'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'message: You do not have permission to access this resource.'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'message: User not found'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'message: Internal server error'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update user role (Admin only)
      tags:
      - admin
  /basic-auth/protected:
    get:
      description: This is a sample protected endpoint accessible only with Basic
        Authentication.
      produces:
      - application/json
      responses:
        "200":
          description: 'message: Basic Auth access granted!'
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 'message: Basic authentication failed'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BasicAuth: []
      summary: Protected with Basic Auth Endpoint
      tags:
      - example
  /forgot-password:
    post:
      consumes:
      - application/json
      description: Sends a password reset email to the user.
      parameters:
      - description: 'email: User''s email address'
        in: body
        name: request
        required: true
        schema:
          additionalProperties:
            type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 'message: Password reset email sent.'
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 'message: Invalid email format / Email not found'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'message: Failed to send password reset email.'
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Request password reset
      tags:
      - authentication
  /items:
    get:
      consumes:
      - application/json
      description: Retrieves a paginated list of sample items, requires JWT authentication.
      parameters:
      - description: Page number (default 1)
        in: query
        name: page
        type: integer
      - description: Number of items per page (default 10)
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Paginated list of items
          schema:
            $ref: '#/definitions/service.PaginatedItems'
        "400":
          description: 'message: Invalid pagination parameters'
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 'message: Authentication token required / Invalid token'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'message: Internal server error'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get list of items
      tags:
      - items
  /items/{id}:
    get:
      consumes:
      - application/json
      description: Retrieves a single item by its ID. Requires JWT authentication.
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Item details
          schema:
            $ref: '#/definitions/model.Item'
        "400":
          description: 'message: Invalid item ID format'
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 'message: Authentication token required / Invalid token'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'message: Item not found'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'message: Internal server error'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get item by ID
      tags:
      - items
  /items/search:
    get:
      consumes:
      - application/json
      description: Searches for items across multiple fields using Elasticsearch.
        Requires JWT authentication.
      parameters:
      - description: Search query string
        in: query
        name: q
        required: true
        type: string
      - description: Page number (default 1)
        in: query
        name: page
        type: integer
      - description: Number of items per page (default 10)
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Paginated list of search results
          schema:
            $ref: '#/definitions/service.PaginatedItems'
        "400":
          description: 'message: Invalid parameters'
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 'message: Authentication token required / Invalid token'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'message: Internal server error'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Search items
      tags:
      - items
  /login:
    post:
      consumes:
      - application/json
      description: Logs in a user and returns a JWT token.
      parameters:
      - description: User login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.LoginUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successful login
          schema:
            $ref: '#/definitions/handler.LoginResponse'
        "400":
          description: 'message: Invalid request data'
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 'message: Invalid username or password'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'message: Internal server error'
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login user
      tags:
      - authentication
  /protected:
    get:
      description: This is a sample protected endpoint accessible only with a valid
        JWT.
      produces:
      - application/json
      responses:
        "200":
          description: 'message: Access granted!'
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 'message: Authentication token required / Invalid token'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Protected Endpoint
      tags:
      - example
  /register:
    post:
      consumes:
      - application/json
      description: Creates a new user account with username, password, and email.
        Defaults to 'user' role.
      parameters:
      - description: User registration details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.RegisterUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 'message: Registration successful!'
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 'message: Invalid request data'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'message: Could not register user. Username or email might
            already exist.'
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register new user
      tags:
      - authentication
  /reset-password:
    post:
      consumes:
      - application/json
      description: Resets user's password using a valid token.
      parameters:
      - description: 'email: User''s email, token: Reset token, new_password: New
          password'
        in: body
        name: request
        required: true
        schema:
          additionalProperties:
            type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 'message: Password reset successfully!'
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 'message: Invalid request data / Invalid or expired token /
            Passwords do not match criteria'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'message: Internal server error'
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Reset password
      tags:
      - authentication
  /verify-email:
    get:
      consumes:
      - application/json
      description: Verifies a user's email address using a provided token.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Verification token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'message: Email verified successfully!'
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 'message: Invalid verification link or token'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'message: Internal server error'
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Verify user email
      tags:
      - authentication
schemes:
- http
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
