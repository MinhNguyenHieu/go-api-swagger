version: '3.8'

services:
  app:
    build: .
    ports:
      - "8080:8080"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydatabase
      POSTGRES_HOST: db 
      POSTGRES_PORT: 5432
      JWT_SECRET: secret_jwt_key

      SMTP_HOST: smtp.example.com
      SMTP_PORT: 587 # 465 (SSL)
      SMTP_USER: your_email@example.com
      SMTP_PASS: your_email_password
      SENDER_EMAIL: your_email@example.com
      APP_PORT: 8080

      BASIC_AUTH_USER: admin
      BASIC_AUTH_PASS: password

      # REDIS_ENABLED: "false"
      # REDIS_ADDR: redis:6379
      # REDIS_PASSWORD: ""
      # REDIS_DB: "0"
      # REDIS_POOL_SIZE: "10"

      RATE_LIMITER_ENABLED: "true"
      RATE_LIMITER_RPS: "10"
      RATE_LIMITER_BURST: "10"
      RATE_LIMITER_TTL: "1m"

    depends_on:
      db:
        condition: service_healthy
    restart: on-failure 
    networks:
      - my-network

  db:
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydatabase
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d mydatabase"]
      interval: 5s
      timeout: 5s
      retries: 10 
      start_period: 20s 
    networks:
      - my-network 

  # redis:
  #   image: redis:6-alpine
  #   ports:
  #     - "6379:6379"
  #   networks:
  #     - my-network
  #   volumes:
  #     - redis-data:/data

volumes:
  db-data:
  # redis-data:

networks:
  my-network:
    driver: bridge

